---
import { Icon } from "astro-icon";

const shortenName = (name) => {
  if (!name) return "Anonymous";
  return name;
};

const convertTime = (unixTimestamp) => {
  const a = new Date(unixTimestamp * 1000);
  const months = [
    "Jan",
    "Feb",
    "Mar",
    "Apr",
    "May",
    "Jun",
    "Jul",
    "Aug",
    "Sep",
    "Oct",
    "Nov",
    "Dec",
  ];
  const time = `${months[a.getMonth()]} ${a.getDate()},  ${a.getFullYear()}`;
  return time;
};

const GoogleReviews = async () => {
  const placeId = "ChIJ_SVfZmPHh0gREqcwzgqtAo4";
  const url = `https://maps.googleapis.com/maps/api/place/details/json?placeid=${placeId}&key=${
    import.meta.env.API_GOOGLE_PLACE
  }`;
  try {
    const details = await fetch(url);
    const {
      result: { reviews },
    } = await details.json();
    return reviews.filter((review) => review.rating >= 4);
  } catch (e) {
    console.log("Error retrieving reviews", e);
  }
};

const reviews = await GoogleReviews();
---

<div class="max-w-3xl mx-auto pt-12">
  <div
    class="text-center text-3xl md:text-4xl font-semibold leading-tighter tracking-tighter mb-4 font-heading"
  >
    Google Maps reviews
  </div>
  <div
    class="relative mx-auto grid md:grid-cols-1 cursor-pointer select-none"
    id="reviews-wrapper"
  >
    {
      reviews.map(({ author_name, rating, text, time }, index) => (
        <div
          class={`${
            index !== 0 && "hide"
          } reviews p-6 text-gray-500 dark:text-gray-400 bg-white dark:bg-slate-900 rounded transition dark:border dark:border-slate-800`}
        >
          <div class="w-full overflow-hidden text-ellipsis text-center">
            "<em>{text}</em>"
          </div>
          <div class="flex justify-center my-2">
            {Array.from(Array(5)).map((item, index) => (
              <Icon
                name="ic:round-star-rate"
                class={`w-5 h-5 ${
                  index < rating ? "text-yellow-500" : "text-gray-500"
                }`}
              />
            ))}
          </div>
          <div class="text-center">{shortenName(author_name)}</div>
          <div class="text-center text-sm text-gray-400 dark:text-gray-500">
            {convertTime(time)}
          </div>
        </div>
      ))
    }
  </div>

  <style>
    .reviews {
      transition: opacity 0.3s;
    }
    .hide {
      position: absolute;
      top: 0;
      left: 0;
      z-index: -10;
      opacity: 0%;
    }
  </style>

  <script>
    let index = 0;

    const nextReview = () => {
      reviews[index].classList.toggle("hide");
      if (!reviews[index + 1]) {
        index = 0;
        reviews[index].classList.toggle("hide");
      } else {
        index += 1;
        reviews[index].classList.toggle("hide");
      }
    };

    let reviews = document.getElementsByClassName("reviews");
    let reviewsWrapper = document.getElementById("reviews-wrapper");
    reviewsWrapper.addEventListener("click", nextReview);

    // Clear interval and remove event listener
    window.onbeforeunload = function () {
      reviewsWrapper.removeEventListener("click", nextReview);
    };
  </script>
</div>
