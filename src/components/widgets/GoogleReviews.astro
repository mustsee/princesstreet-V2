---
import { Icon } from "astro-icon";

const shortenName = (name) => {
  if (!name) return "Anonymous";
  return name;
};

const convertTime = (unixTimestamp) => {
  const a = new Date(unixTimestamp * 1000);
  const months = [
    "Jan",
    "Feb",
    "Mar",
    "Apr",
    "May",
    "Jun",
    "Jul",
    "Aug",
    "Sep",
    "Oct",
    "Nov",
    "Dec",
  ];
  const time = `${months[a.getMonth()]} ${a.getDate()},  ${a.getFullYear()}`;
  return time;
};

/* const GoogleReviews = async () => {
  const placeId = "ChIJ_SVfZmPHh0gREqcwzgqtAo4";
  const url = `https://maps.googleapis.com/maps/api/place/details/json?placeid=${placeId}&key=${
    import.meta.env.API_GOOGLE_PLACE
  }`;
  try {
    const details = await fetch(url);
    const {
      result: { reviews },
    } = await details.json();
    return reviews.filter((review) => review.rating >= 4);
  } catch (e) {
    console.log("Error retrieving reviews", e);
  }
};

let reviews = await GoogleReviews(); */

let getCatFact = async () => {
  const url = "https://catfact.ninja/fact";
  try {
    const fact = await fetch(url);
    const res = await fact.json();
    console.log("q", res);
    return res;
  } catch (e) {
    console.log("Error retrieving catFact", e);
  }
};

let catFact = await getCatFact();
---

<div class="max-w-3xl mx-auto pt-12">
  <div
    class="text-center text-3xl md:text-4xl font-semibold leading-tighter tracking-tighter mb-4 font-heading"
  >
    Google Maps reviews
  </div>
  <div
    class="relative mx-auto grid md:grid-cols-1 cursor-pointer select-none"
    id="reviews-wrapper"
  >
    {catFact.fact}
  </div>
</div>

<style>
  .reviews {
    transition: opacity 0.3s;
  }
  .hide {
    position: absolute;
    top: 0;
    left: 0;
    z-index: -10;
    opacity: 0%;
  }
</style>

<script is:inline>
  let index = 0;

  const nextReview = () => {
    reviewItems[index].classList.toggle("hide");
    if (!reviewItems[index + 1]) {
      index = 0;
      reviewItems[index].classList.toggle("hide");
    } else {
      index += 1;
      reviewItems[index].classList.toggle("hide");
    }
  };

  let reviewItems = document.getElementsByClassName("reviews");
  let reviewsWrapper = document.getElementById("reviews-wrapper");
  reviewsWrapper.addEventListener("click", nextReview);

  // Clear interval and remove event listener
  window.onbeforeunload = function () {
    reviewsWrapper.removeEventListener("click", nextReview);
  };
</script>
