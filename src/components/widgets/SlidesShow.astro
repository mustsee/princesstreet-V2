---
import { Picture } from "@astrojs/image/components";
import { Icon } from "astro-icon";
import { SITE } from "~/config.mjs";

const alts = [
  { alt: "Princes Street lunch room" },
  { alt: "View from nearby Calton Hill" },
  { alt: "Princes Street bathroom" },
  { alt: "Group in Edinburgh" },
  { alt: "Princes Street kitchen" },
  { alt: "Jumping girl in Edinburgh" },
  { alt: "Princes Street shower" },
];

// Astro loads images in order
// So I prefixed images with numbers : 01, 02...
const images = await Astro.glob("~/assets/images/hero/**");

const loadImages = images.map((image, index) => {
  // import.meta.env.DEV is a Vite built-in variable
  if (import.meta.env.DEV) {
    return {
      src: image.default,
      alt: alts[index],
    };
  }
  return {
    ...image.default,
    // Remove the path to build assets for github pages
    src: image.default.src.replace(`${SITE.basePathname}`, "/"),
    alt: alts[index],
  };
});
---

<div class="relative m-auto max-w-4xl mb-12 md:mb-0">
  <div
    class="absolute -bottom-12 md:bottom-0 md:top-1/2 md:z-10 h-12 w-full flex justify-between select-none"
  >
    <Icon
      id="previous-image"
      name="tabler:arrow-narrow-left"
      class="icon-slide-show icon-slide-show-sm md:icon-slide-show-md"
    />
    <div class="flex flex-1 bg-slate-900 dark:bg-white opacity-10 md:hidden">
    </div>
    <Icon
      id="next-image"
      name="tabler:arrow-narrow-right"
      class="icon-slide-show icon-slide-show-sm md:icon-slide-show-md"
    />
  </div>
  {
    loadImages.map((image, index) => (
      <Picture
        src={image.src}
        id="picture"
        class={`slide mx-auto rounded-md w-full ${index !== 0 && "hide"}`}
        widths={[400, 768, 1480]}
        sizes="(max-width: 767px) 400px, (max-width: 1479px) 768px, 1480px"
        alt={image.alt}
        aspectRatio={16 / 9}
        loading="eager"
        width={image.width}
        height={image.height}
        formats={["jpg"]}
      />
    ))
  }
</div>

<script>
  let index = 0;
  let intervalTime = 10000;
  let slideInterval;

  const nextImage = () => {
    slides[index].classList.toggle("hide");
    if (!slides[index + 1]) {
      index = 0;
      slides[index].classList.toggle("hide");
    } else {
      index += 1;
      slides[index].classList.toggle("hide");
    }
    clearInterval(slideInterval);
    slideInterval = setInterval(moveSlides, intervalTime);
  };

  const previousImage = () => {
    slides[index].classList.toggle("hide");
    if (!slides[index - 1]) {
      index = slides.length - 1;
      slides[index].classList.toggle("hide");
    } else {
      index -= 1;
      slides[index].classList.toggle("hide");
    }
    clearInterval(slideInterval);
    slideInterval = setInterval(moveSlides, intervalTime);
  };

  const moveSlides = () => {
    slides[index].classList.toggle("hide");
    if (!slides[index + 1]) {
      index = 0;
      slides[index].classList.toggle("hide");
    } else {
      index += 1;
      slides[index].classList.toggle("hide");
    }
  };

  let slides = document.getElementsByClassName("slide");

  let previous = document.getElementById("previous-image");
  previous.addEventListener("click", previousImage);

  let next = document.getElementById("next-image");
  next.addEventListener("click", nextImage);

  slideInterval = setInterval(moveSlides, intervalTime);

  // Clear interval and remove event listener
  window.onbeforeunload = function () {
    clearInterval(slideInterval);
    next.removeEventListener("click", nextImage);
    next.removeEventListener("click", previousImage);
  };
</script>

<style>
  .slide {
    transition: opacity 0.3s;
  }

  .hide {
    position: absolute;
    top: 0;
    left: 0;
    z-index: -10;
    opacity: 0%;
  }
</style>
